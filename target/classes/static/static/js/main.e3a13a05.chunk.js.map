{"version":3,"sources":["logo.svg","Contexts/CategoryManager/CategoryManager.jsx","Components/NavigationBar/NavigationBar.jsx","Contexts/TransactionsManager/TransactionsManager.jsx","Components/Transactions/AddBudgetItem/AddBudgetItem.jsx","Components/MoneyDisplay/MoneyDisplay.jsx","Components/Transactions/TransactionItem/TransactionItem.jsx","Components/Transactions/TransactionList/TransactionList.jsx","Components/Transactions/TransactionViewer/TransactionViewer.jsx","Components/Transactions/TransactionViewer/ExpenseViewer.jsx","Components/Transactions/TransactionViewer/IncomeViewer.jsx","Components/Transactions/TransactionList/CategoryList.jsx","Components/Categories/AddCategoryItem/AddCategoryItem.jsx","Components/Categories/CategoryViewer/CategoryViewer.jsx","Components/AppRouter/AppRouter.jsx","App.js","reportWebVitals.js","index.js"],"names":["CategoryContext","React","createContext","CategoryManager","props","useState","categories","setCategories","id","a","fetch","method","headers","response","json","data","console","error","categoryName","body","JSON","stringify","updateCategories","useEffect","Provider","value","addCategory","getCategoryById","children","NavigationBar","className","to","TransactionContext","TransactionsManager","useContext","transactions","setTransactions","dollars","category","note","isIncome","transactionDate","categoryObject","url","updateTransactions","log","addTransaction","AddBudgetItem","today","Date","toISOString","substr","formRef","useRef","setDollars","selectedCategory","setSelectedCategory","setNote","date","setDate","resetForm","onSubmit","event","preventDefault","income","ref","htmlFor","type","name","min","max","onChange","e","target","Consumer","map","placeholder","MoneyDisplay","amount","TransactionItem","TransactionList","filter","transaction","forEach","getTotal","TransactionViewer","ExpenseViewer","IncomeViewer","CategoryList","setName","CategoryViewer","AppRouter","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a13a05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const CategoryContext = React.createContext();\r\n\r\nexport function CategoryManager(props) {\r\n    \r\n    let [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        updateCategories()\r\n    }, []); \r\n\r\n    async function getCategoryById(id) {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8080/categories/${id}`, {\r\n            method: 'GET', \r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }})\r\n\r\n\r\n            const data = await response.json();\r\n            \r\n            return data\r\n\r\n        } catch (error) {\r\n            console.error('error', error)\r\n        }\r\n    }\r\n\r\n    async function addCategory(categoryName) {\r\n        try {\r\n            const body = JSON.stringify({categoryName});\r\n\r\n            const response = await fetch(\"http://127.0.0.1:8080/categories/add\", {\r\n            method: 'POST', \r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n                body\r\n            })\r\n            \r\n            await updateCategories()\r\n        } catch (error) {\r\n            console.error('error', error)\r\n        }\r\n        \r\n    }\r\n\r\n    async function updateCategories() { \r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:8080/categories/all\", {\r\n                method: 'GET', \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n\r\n            const data = await response.json();\r\n\r\n            setCategories(data)\r\n        } catch (error) {\r\n            console.error('error', error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CategoryContext.Provider value={{ categories, setCategories, addCategory, updateCategories, getCategoryById }}>\r\n            { props.children }\r\n        </CategoryContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport default function NavigationBar() {\r\n    return (\r\n        <div className=\"navbar\" >\r\n            <nav>\r\n                <ul className=\"nav-ul\">\r\n                    <li className=\"nav-li\">\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-li\">\r\n                        <Link to=\"/transactions\">Transactions</Link>\r\n                    </li>\r\n                    <li className=\"nav-li\">\r\n                        <Link to=\"/income\">Income</Link>\r\n                    </li>\r\n                    <li className=\"nav-li\">\r\n                        <Link to=\"/expenses\">Expenses</Link>\r\n                    </li>\r\n                    <li className=\"nav-li\">\r\n                        <Link to=\"/categories\">Categories</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext, createContext } from 'react'\r\nimport { CategoryContext } from '../CategoryManager/CategoryManager';\r\n\r\nexport const TransactionContext = React.createContext();\r\n\r\nexport function TransactionsManager(props) {\r\n\r\n    const categories = useContext(CategoryContext);\r\n\r\n    let [transactions, setTransactions] = useState([]);\r\n    let [incomeTransactions, setIncomeTransactions] = useState([]);\r\n    let [expenseTransactions, setExpenseTransactions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        updateTransactions()\r\n        console.log(\"updated transactions\", transactions)\r\n    }, []); \r\n\r\n    async function addTransaction(dollars, category, note, isIncome, transactionDate) {\r\n\r\n        // fetch Catgeory from categoryID\r\n        const categoryObject = await categories.getCategoryById(category)\r\n\r\n        // convert payload to json\r\n        let url = \"\";\r\n\r\n        if(isIncome === true) {\r\n            url = \"http://localhost:8080/transactions/addIncome\"\r\n        } else {\r\n            url = \"http://localhost:8080/transactions/addExpense\"\r\n        }\r\n        const body = JSON.stringify({dollars, category:categoryObject, note, transactionDate, isIncome:isIncome});\r\n\r\n        try {\r\n\r\n            const response = await fetch(url, {\r\n                method: 'POST', \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body\r\n            })\r\n        } catch(error) {\r\n            console.error('error', error)\r\n        }\r\n        \r\n        await updateTransactions();\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/transactions/delete/?id=${id}`, {\r\n                method: 'GET', \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n\r\n            await updateTransactions();\r\n        } catch(error) {\r\n            console.error('error', error)\r\n        }\r\n    }\r\n\r\n    async function updateTransactions() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/transactions/all\", {\r\n                method: 'GET', \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n    \r\n            const data = await response.json()\r\n    \r\n            await setTransactions(data)\r\n        } catch(error) {\r\n            console.error('error', error)\r\n        }\r\n    }\r\n\r\n    function getTransactionById(id) {\r\n        // cast to int\r\n        const intId = parseInt(id)\r\n\r\n        // check if id matches\r\n        const matchingTransaction = transactions.find(transaction => transaction.id === intId);\r\n\r\n        return matchingTransaction\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TransactionContext.Provider value={ { transactions, setTransactions, addTransaction, updateTransactions } }>\r\n                { props.children }\r\n            </TransactionContext.Provider>\r\n        </div>\r\n    )\r\n}","import { render } from '@testing-library/react';\r\nimport React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport { CategoryContext, CategoryManager } from '../../../Contexts/CategoryManager/CategoryManager';\r\nimport { TransactionContext } from '../../../Contexts/TransactionsManager/TransactionsManager';\r\nimport CategorySelector from '../../Categories/CategorySelector/CategorySelector';\r\n\r\nexport default function AddBudgetItem(props) {\r\n\r\n    const transactions = useContext(TransactionContext);\r\n\r\n    const categories = useContext(CategoryContext);\r\n\r\n    let today = new Date().toISOString().substr(0, 10)\r\n\r\n    const formRef = useRef(null)\r\n\r\n    const [dollars, setDollars] = useState('0');\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(1);\r\n\r\n    const [note, setNote] = useState('');\r\n\r\n    const [date, setDate] = useState(today);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        transactions.addTransaction(dollars, selectedCategory, note, props.income, date);\r\n        resetForm();\r\n    }\r\n\r\n    const handleDollarChange = (e) => {\r\n        setDollars(e.target.value)\r\n    }\r\n\r\n    const handleCategory = (e) => {\r\n        setSelectedCategory(e.target.value)\r\n\r\n    }\r\n\r\n    const handleNote = (e) => {\r\n        setNote(e.target.value)\r\n    }\r\n\r\n    const handleDate = (e) => {\r\n        setDate(e.target.value)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setDollars(0);\r\n        setNote('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form className=\"add-transaction-form\" onSubmit={handleSubmit} ref={formRef}>\r\n                <div>\r\n                    <label htmlFor=\"transactionDollarAmount\">Enter dollar amount of transaction:</label>\r\n                    <div>\r\n                        <span>$<input type=\"number\" name=\"transactionDollarAmount\" id=\"transactionDollarAmount\" min=\"0\" max=\"9999\" value={dollars} onChange={handleDollarChange}/></span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <CategoryManager>\r\n                    <label htmlFor=\"transactionCategory\">Set a category for the transaction:</label>\r\n                    <div>\r\n                        <select name=\"transactionCategory\" value={selectedCategory} onChange={handleCategory}>\r\n                        <CategoryContext.Consumer>\r\n                            {categories => categories.categories.map(category => (<option key={category.id} value={category.id}>{category.categoryName}</option>))}\r\n                        </CategoryContext.Consumer> \r\n                        </select>\r\n                    </div>\r\n                </CategoryManager>\r\n\r\n                <div>\r\n                    <label htmlFor=\"transactionNote\">Set a note for the transaction:</label>\r\n                    <div>\r\n                        <input name=\"transactionNote\" type=\"text\" placeholder=\"Note\" value={note} onChange={handleNote}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div>\r\n                    <label htmlFor=\"transactionDate\">Date of transaction:</label>\r\n                    <div>\r\n                        <input name=\"transactionDate\" type=\"date\" placeholder=\"Date\" value={date} onChange={handleDate} />\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n                <button>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MoneyDisplay(props) {\r\n    return (\r\n        <div>\r\n            { props.amount >= 0 ? `$${props.amount}` : `-$${props.amount * -1}` }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport MoneyDisplay from '../../MoneyDisplay/MoneyDisplay'\r\n\r\nexport default function TransactionItem(props) {\r\n    return (\r\n        <div className=\"transaction-item\">\r\n            <span><MoneyDisplay amount={props.dollars}></MoneyDisplay></span>\r\n            <span>{props.category ? props.category : 'Empty'}</span>\r\n            <span>{props.note}</span>\r\n            <span>{props.transactionDate}</span>\r\n            <span></span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TransactionContext } from '../../../Contexts/TransactionsManager/TransactionsManager'\r\nimport MoneyDisplay from '../../MoneyDisplay/MoneyDisplay';\r\nimport TransactionItem from '../TransactionItem/TransactionItem'\r\n\r\nexport default function TransactionList(props) {\r\n\r\n    const transactions = useContext(TransactionContext)\r\n\r\n    if(props.filter === \"expense\") {\r\n        transactions.transactions =  transactions.transactions.filter(transaction => transaction.income === false);\r\n    }\r\n\r\n\r\n    if(props.filter === \"income\") {\r\n        transactions.transactions =  transactions.transactions.filter(transaction => transaction.income === true);\r\n    }\r\n\r\n    const getTotal = () => {\r\n        let value = 0;\r\n        transactions.transactions.forEach(transaction => {\r\n            value += transaction.dollars\r\n        })\r\n\r\n        return value;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"transaction-list\">\r\n            <div className=\"transaction-list-header\">\r\n                <div>Dollar Amount</div>\r\n                <div>Category</div>\r\n                <div>Note</div>\r\n                <div>Date</div>\r\n                <div></div>\r\n            </div>\r\n            \r\n            { transactions.transactions.map(transaction => <TransactionItem key={transaction.id} data-id={transaction.id} dollars={transaction.dollars} category={ transaction.category ? transaction.category.categoryName : ''} note={transaction.note} transactionDate={transaction.transactionDate}></TransactionItem>) }\r\n            <div className=\"sum-line\"><MoneyDisplay amount={ getTotal() }></MoneyDisplay></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TransactionsManager } from '../../../Contexts/TransactionsManager/TransactionsManager'\r\nimport AddBudgetItem from '../AddBudgetItem/AddBudgetItem'\r\nimport TransactionList from '../TransactionList/TransactionList'\r\n\r\nexport default function TransactionViewer() {\r\n    return (\r\n        <div>\r\n            <TransactionsManager>\r\n                <div>\r\n                    <TransactionList/>\r\n                </div>\r\n            </TransactionsManager>           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TransactionsManager } from '../../../Contexts/TransactionsManager/TransactionsManager'\r\nimport AddBudgetItem from '../AddBudgetItem/AddBudgetItem'\r\nimport TransactionList from '../TransactionList/TransactionList'\r\n\r\nexport default function ExpenseViewer() {\r\n    return (\r\n        <div>\r\n            <TransactionsManager>\r\n                <AddBudgetItem income={false}/>\r\n                <div>\r\n                    <TransactionList filter=\"expense\"/>\r\n                </div>\r\n            </TransactionsManager>           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TransactionsManager } from '../../../Contexts/TransactionsManager/TransactionsManager'\r\nimport AddBudgetItem from '../AddBudgetItem/AddBudgetItem'\r\nimport TransactionList from '../TransactionList/TransactionList'\r\n\r\nexport default function IncomeViewer() {\r\n    return (\r\n        <div>\r\n            <TransactionsManager>\r\n                <AddBudgetItem income={true} />\r\n                <div>\r\n                    <TransactionList filter=\"income\"/>\r\n                </div>\r\n            </TransactionsManager>           \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { CategoryContext } from '../../../Contexts/CategoryManager/CategoryManager';\r\n\r\nexport default function CategoryList(props) {\r\n\r\n    const categories = useContext(CategoryContext);\r\n\r\n    return (\r\n        <div className=\"transaction-list\">\r\n            <div className=\"transaction-list-header\">\r\n                <div>Name</div>\r\n            </div>\r\n            { categories.categories.map(category => <div key={category.id} data-id={category.id}>{category.categoryName}</div>) }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport { CategoryContext } from '../../../Contexts/CategoryManager/CategoryManager';\r\n\r\nexport default function AddBudgetItem(props) {\r\n\r\n    const categories = useContext(CategoryContext);\r\n\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        categories.addCategory(name);\r\n        resetForm();\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setName(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"add-transaction-form\" onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"categoryName\">Enter name of category:</label>\r\n                    <div>\r\n                        <input type=\"text\" name=\"categoryName\" id=\"categoryName\" value={name} onChange={handleNameChange}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n            \r\n                <button>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { CategoryManager } from '../../../Contexts/CategoryManager/CategoryManager'\r\nimport CategoryList from '../../Transactions/TransactionList/CategoryList'\r\nimport AddCategoryItem from '../AddCategoryItem/AddCategoryItem'\r\n\r\n\r\nexport default function CategoryViewer() {\r\n    return (\r\n        <div>\r\n            <CategoryManager>\r\n                <AddCategoryItem />\r\n                <div>\r\n                    <CategoryList />\r\n                </div>\r\n            </CategoryManager>    \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\r\nimport TransactionViewer from \"../Transactions/TransactionViewer/TransactionViewer\";\r\nimport ExpenseViewer from \"../Transactions/TransactionViewer/ExpenseViewer\";\r\nimport IncomeViewer from \"../Transactions/TransactionViewer/IncomeViewer\"; \r\nimport CategoryViewer from \"../Categories/CategoryViewer/CategoryViewer\";\r\nimport { CategoryManager } from \"../../Contexts/CategoryManager/CategoryManager\";\r\nimport Home from \"../../Pages/Home\";\r\n\r\nexport default function AppRouter() {\r\n  return (\r\n    <Router>\r\n      <NavigationBar></NavigationBar>\r\n      <div className=\"content\">\r\n        <Switch>\r\n          <Route path=\"/transactions\">\r\n            <TransactionViewer />\r\n          </Route>\r\n          <CategoryManager>\r\n            <Route path=\"/income\">\r\n              <IncomeViewer />\r\n            </Route>\r\n            <Route path=\"/expenses\">\r\n              <ExpenseViewer />\r\n            </Route>\r\n            <Route path=\"/categories\">\r\n              <CategoryViewer />\r\n            </Route>\r\n          </CategoryManager>\r\n          <Route exact path=\"/\">\r\n            <CategoryViewer />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <div>404</div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { CategoryManager, CategoryContext } from './Contexts/CategoryManager/CategoryManager';\nimport AppRouter from './Components/AppRouter/AppRouter';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      \n        <AppRouter />\n      \n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}